
System functional properties: LM + BDA


dN/dt

         -m          
    N⋅P⋅P  ⋅a        
- ───────────── + N⋅r
     -m              
  N⋅P  ⋅a⋅h + 1      

dP/dt

      -m           
 N⋅P⋅P  ⋅a⋅e       
───────────── - P⋅q
   -m              
N⋅P  ⋅a⋅h + 1      

Isoclines for N

⎡           m⎤
⎢    P     P ⎥
⎢0, ─── - ───⎥
⎣   h⋅r   a⋅h⎦

Isoclines for P

⎡    _______________⎤
⎢   ╱ N⋅a⋅(e - h⋅q) ⎥
⎢m ╱  ───────────── ⎥
⎣╲╱         q       ⎦


fix points:

⎡⎛                                             m                    ⎞⎤
⎢⎜                 1       ⎛               1  ⎞                     ⎟⎥
⎢⎜               ─────     ⎜             ─────⎟                     ⎟⎥
⎢⎜               m - 1     ⎜             m - 1⎟                  1  ⎟⎥
⎢⎜  ⎛a⋅(e - h⋅q)⎞          ⎜⎛a⋅(e - h⋅q)⎞     ⎟                ─────⎟⎥
⎢⎜a⋅⎜───────────⎟      - r⋅⎜⎜───────────⎟     ⎟                m - 1⎟⎥
⎢⎜  ⎝    e⋅r    ⎠          ⎝⎝    e⋅r    ⎠     ⎠   ⎛a⋅(e - h⋅q)⎞     ⎟⎥
⎢⎜──────────────────────────────────────────────, ⎜───────────⎟     ⎟⎥
⎣⎝                    a⋅h⋅r                       ⎝    e⋅r    ⎠     ⎠⎦

Np numeric

            0.3        
     0.5⋅N⋅P           
- ─────────────── + N⋅r
         -0.7          
  0.1⋅N⋅P     + 1      

Pp numeric

          0.3          
   0.2⋅N⋅P             
─────────────── - 0.2⋅P
       -0.7            
0.1⋅N⋅P     + 1        

Numeric fixed points

⎡⎛                                                                            
⎢⎜                    ⎛ 3.33333333333333                                      
⎣⎝3.96916120510085e-6⋅⎝r                ⋅(3.91486764116886 - 6.78074965941179⋅

     7/10                                                                     
  10⎞                           10/3                                        10
ⅈ)  ⎠    , 1.65381716879202e-8⋅r    ⋅(3.91486764116886 - 6.78074965941179⋅ⅈ)  

⎞  ⎛                                                                          
⎟  ⎜                    ⎛ 3.33333333333333                                    
⎠, ⎝3.96916120510085e-6⋅⎝r                ⋅(3.91486764116886 + 6.7807496594117

       7/10                                                                   
    10⎞                           10/3                                        
9⋅ⅈ)  ⎠    , 1.65381716879202e-8⋅r    ⋅(3.91486764116886 + 6.78074965941179⋅ⅈ)

  ⎞  ⎛                                    7/10                        ⎞⎤
10⎟  ⎜                 ⎛ 3.33333333333333⎞                        10/3⎟⎥
  ⎠, ⎝7.16025174425032⋅⎝r                ⎠    , 14.3205034885006⋅r    ⎠⎦

N numeric isoclines:

⎡           0.7   5.0⋅P⎤
⎢0, - 10.0⋅P    + ─────⎥
⎣                   r  ⎦

P numeric isoclines:

⎡                   1.42857142857143⎤
⎣0.860264806695562⋅N                ⎦

#----------------------------------------
frame = 000 -> r = -1.000

<string>:2: RuntimeWarning: invalid value encountered in double_scalars
<string>:2: RuntimeWarning: invalid value encountered in double_scalars

solution: (nan +nani, nan +nani)
<string>:2: RuntimeWarning: invalid value encountered in double_scalars
<string>:2: RuntimeWarning: invalid value encountered in double_scalars

solution: (nan +nani, nan +nani)
<string>:2: RuntimeWarning: invalid value encountered in double_scalars
<string>:2: RuntimeWarning: invalid value encountered in double_scalars

solution: (nan +0.0000i, nan +0.0000i)
<string>:2: RuntimeWarning: divide by zero encountered in double_scalars
<string>:2: RuntimeWarning: invalid value encountered in double_scalars
<string>:2: RuntimeWarning: divide by zero encountered in double_scalars
<string>:2: RuntimeWarning: invalid value encountered in double_scalars
<string>:2: RuntimeWarning: divide by zero encountered in power
<string>:2: RuntimeWarning: invalid value encountered in multiply
<string>:2: RuntimeWarning: divide by zero encountered in power
<string>:2: RuntimeWarning: invalid value encountered in multiply

#----------------------------------------
frame = 001 -> r = -0.970


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 002 -> r = -0.939


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 003 -> r = -0.909


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 004 -> r = -0.879


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 005 -> r = -0.848


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 006 -> r = -0.818


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 007 -> r = -0.788


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 008 -> r = -0.758


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 009 -> r = -0.727


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 010 -> r = -0.697


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 011 -> r = -0.667


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 012 -> r = -0.636


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 013 -> r = -0.606


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 014 -> r = -0.576


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 015 -> r = -0.545


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 016 -> r = -0.515


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 017 -> r = -0.485


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 018 -> r = -0.455


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 019 -> r = -0.424


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)
/home/bertolino/.local/lib/python3.6/site-packages/matplotlib/pyplot.py:513: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  max_open_warning, RuntimeWarning)

#----------------------------------------
frame = 020 -> r = -0.394


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 021 -> r = -0.364


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 022 -> r = -0.333


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 023 -> r = -0.303


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 024 -> r = -0.273


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 025 -> r = -0.242


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 026 -> r = -0.212


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 027 -> r = -0.182


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 028 -> r = -0.152


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 029 -> r = -0.121


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 030 -> r = -0.091


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 031 -> r = -0.061


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 032 -> r = -0.030


solution: (nan +nani, nan +nani)

solution: (nan +nani, nan +nani)

solution: (nan +0.0000i, nan +0.0000i)

#----------------------------------------
frame = 033 -> r = 0.000


solution: (0.0000 +0.0000i, -0.0000 +0.0000i)
/home/bertolino/.local/lib/python3.6/site-packages/numpy/core/numeric.py:553: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order, subok=True)

solution: (0.0000 +0.0000i, 0.0000 -0.0000i)

solution: (0.0000 +0.0000i, 0.0000 +0.0000i)
<string>:2: RuntimeWarning: divide by zero encountered in true_divide
<string>:2: RuntimeWarning: invalid value encountered in true_divide

#----------------------------------------
frame = 034 -> r = 0.030


solution: (0.0002 +0.0020i, -0.0001 +0.0001i)

solution: (0.0002 -0.0020i, -0.0001 -0.0001i)

solution: (0.0020 +0.0000i, 0.0001 +0.0000i)

#----------------------------------------
frame = 035 -> r = 0.061


solution: (0.0011 +0.0103i, -0.0006 +0.0011i)

solution: (0.0011 -0.0103i, -0.0006 -0.0011i)

solution: (0.0103 +0.0000i, 0.0013 +0.0000i)

#----------------------------------------
frame = 036 -> r = 0.091


solution: (0.0028 +0.0265i, -0.0024 +0.0042i)

solution: (0.0028 -0.0265i, -0.0024 -0.0042i)

solution: (0.0266 +0.0000i, 0.0048 +0.0000i)

#----------------------------------------
frame = 037 -> r = 0.121


solution: (0.0054 +0.0518i, -0.0063 +0.0109i)

solution: (0.0054 -0.0518i, -0.0063 -0.0109i)

solution: (0.0521 +0.0000i, 0.0126 +0.0000i)

#----------------------------------------
frame = 038 -> r = 0.152


solution: (0.0092 +0.0872i, -0.0133 +0.0230i)

solution: (0.0092 -0.0872i, -0.0133 -0.0230i)

solution: (0.0876 +0.0000i, 0.0266 +0.0000i)

#----------------------------------------
frame = 039 -> r = 0.182


solution: (0.0140 +0.1334i, -0.0244 +0.0422i)

solution: (0.0140 -0.1334i, -0.0244 -0.0422i)

solution: (0.1341 +0.0000i, 0.0488 +0.0000i)

#----------------------------------------
frame = 040 -> r = 0.212


solution: (0.0201 +0.1911i, -0.0408 +0.0706i)

solution: (0.0201 -0.1911i, -0.0408 -0.0706i)

solution: (0.1921 +0.0000i, 0.0815 +0.0000i)

#----------------------------------------
frame = 041 -> r = 0.242


solution: (0.0274 +0.2609i, -0.0636 +0.1102i)

solution: (0.0274 -0.2609i, -0.0636 -0.1102i)

solution: (0.2624 +0.0000i, 0.1272 +0.0000i)

#----------------------------------------
frame = 042 -> r = 0.273


solution: (0.0361 +0.3435i, -0.0942 +0.1631i)

solution: (0.0361 -0.3435i, -0.0942 -0.1631i)

solution: (0.3454 +0.0000i, 0.1884 +0.0000i)

#----------------------------------------
frame = 043 -> r = 0.303


solution: (0.0462 +0.4392i, -0.1338 +0.2318i)

solution: (0.0462 -0.4392i, -0.1338 -0.2318i)

solution: (0.4416 +0.0000i, 0.2677 +0.0000i)

#----------------------------------------
frame = 044 -> r = 0.333


solution: (0.0577 +0.5486i, -0.1839 +0.3185i)

solution: (0.0577 -0.5486i, -0.1839 -0.3185i)

solution: (0.5516 +0.0000i, 0.3678 +0.0000i)

#----------------------------------------
frame = 045 -> r = 0.364


solution: (0.0706 +0.6721i, -0.2457 +0.4256i)

solution: (0.0706 -0.6721i, -0.2457 -0.4256i)

solution: (0.6758 +0.0000i, 0.4915 +0.0000i)

#----------------------------------------
frame = 046 -> r = 0.394


solution: (0.0851 +0.8101i, -0.3209 +0.5558i)

solution: (0.0851 -0.8101i, -0.3209 -0.5558i)

solution: (0.8146 +0.0000i, 0.6418 +0.0000i)

#----------------------------------------
frame = 047 -> r = 0.424


solution: (0.1012 +0.9630i, -0.4108 +0.7115i)

solution: (0.1012 -0.9630i, -0.4108 -0.7115i)

solution: (0.9683 +0.0000i, 0.8216 +0.0000i)

#----------------------------------------
frame = 048 -> r = 0.455


solution: (0.1189 +1.1312i, -0.5170 +0.8955i)

solution: (0.1189 -1.1312i, -0.5170 -0.8955i)

solution: (1.1375 +0.0000i, 1.0341 +0.0000i)

#----------------------------------------
frame = 049 -> r = 0.485


solution: (0.1382 +1.3151i, -0.6411 +1.1105i)

solution: (0.1382 -1.3151i, -0.6411 -1.1105i)

solution: (1.3223 +0.0000i, 1.2823 +0.0000i)

#----------------------------------------
frame = 050 -> r = 0.515


solution: (0.1592 +1.5149i, -0.7847 +1.3592i)

solution: (0.1592 -1.5149i, -0.7847 -1.3592i)

solution: (1.5233 +0.0000i, 1.5694 +0.0000i)

#----------------------------------------
frame = 051 -> r = 0.545


solution: (0.1819 +1.7311i, -0.9494 +1.6444i)

solution: (0.1819 -1.7311i, -0.9494 -1.6444i)

solution: (1.7406 +0.0000i, 1.8988 +0.0000i)

#----------------------------------------
frame = 052 -> r = 0.576


solution: (0.2064 +1.9638i, -1.1369 +1.9692i)

solution: (0.2064 -1.9638i, -1.1369 -1.9692i)

solution: (1.9746 +0.0000i, 2.2738 +0.0000i)

#----------------------------------------
frame = 053 -> r = 0.606


solution: (0.2326 +2.2135i, -1.3489 +2.3364i)

solution: (0.2326 -2.2135i, -1.3489 -2.3364i)

solution: (2.2257 +0.0000i, 2.6978 +0.0000i)

#----------------------------------------
frame = 054 -> r = 0.636


solution: (0.2607 +2.4804i, -1.5871 +2.7490i)

solution: (0.2607 -2.4804i, -1.5871 -2.7490i)

solution: (2.4941 +0.0000i, 3.1743 +0.0000i)

#----------------------------------------
frame = 055 -> r = 0.667


solution: (0.2906 +2.7648i, -1.8533 +3.2101i)

solution: (0.2906 -2.7648i, -1.8533 -3.2101i)

solution: (2.7800 +0.0000i, 3.7067 +0.0000i)

#----------------------------------------
frame = 056 -> r = 0.697


solution: (0.3224 +3.0670i, -2.1494 +3.7228i)

solution: (0.3224 -3.0670i, -2.1494 -3.7228i)

solution: (3.0839 +0.0000i, 4.2987 +0.0000i)

#----------------------------------------
frame = 057 -> r = 0.727


solution: (0.3560 +3.3872i, -2.4770 +4.2902i)

solution: (0.3560 -3.3872i, -2.4770 -4.2902i)

solution: (3.4058 +0.0000i, 4.9539 +0.0000i)

#----------------------------------------
frame = 058 -> r = 0.758


solution: (0.3916 +3.7257i, -2.8380 +4.9156i)

solution: (0.3916 -3.7257i, -2.8380 -4.9156i)

solution: (3.7462 +0.0000i, 5.6760 +0.0000i)

#----------------------------------------
frame = 059 -> r = 0.788


solution: (0.4291 +4.0827i, -3.2344 +5.6021i)

solution: (0.4291 -4.0827i, -3.2344 -5.6021i)

solution: (4.1052 +0.0000i, 6.4688 +0.0000i)

#----------------------------------------
frame = 060 -> r = 0.818


solution: (0.4686 +4.4585i, -3.6680 +6.3531i)

solution: (0.4686 -4.4585i, -3.6680 -6.3531i)

solution: (4.4831 +0.0000i, 7.3360 +0.0000i)

#----------------------------------------
frame = 061 -> r = 0.848


solution: (0.5101 +4.8534i, -4.1407 +7.1719i)

solution: (0.5101 -4.8534i, -4.1407 -7.1719i)

solution: (4.8801 +0.0000i, 8.2814 +0.0000i)

#----------------------------------------
frame = 062 -> r = 0.879


solution: (0.5536 +5.2675i, -4.6545 +8.0619i)

solution: (0.5536 -5.2675i, -4.6545 -8.0619i)

solution: (5.2965 +0.0000i, 9.3090 +0.0000i)

#----------------------------------------
frame = 063 -> r = 0.909


solution: (0.5992 +5.7011i, -5.2114 +9.0264i)

solution: (0.5992 -5.7011i, -5.2114 -9.0264i)

solution: (5.7325 +0.0000i, 10.4228 +0.0000i)

#----------------------------------------
frame = 064 -> r = 0.939


solution: (0.6469 +6.1544i, -5.8133 +10.0689i)

solution: (0.6469 -6.1544i, -5.8133 -10.0689i)

solution: (6.1883 +0.0000i, 11.6265 +0.0000i)

#----------------------------------------
frame = 065 -> r = 0.970


solution: (0.6966 +6.6277i, -6.4622 +11.1929i)

solution: (0.6966 -6.6277i, -6.4622 -11.1929i)

solution: (6.6642 +0.0000i, 12.9244 +0.0000i)

#----------------------------------------
frame = 066 -> r = 1.000


solution: (0.7485 +7.1210i, -7.1603 +12.4019i)

solution: (0.7485 -7.1210i, -7.1603 -12.4019i)

solution: (7.1603 +0.0000i, 14.3205 +0.0000i)

#----------------------------------------
frame = 067 -> r = 1.030


solution: (0.8024 +7.6347i, -7.9094 +13.6995i)

solution: (0.8024 -7.6347i, -7.9094 -13.6995i)

solution: (7.6768 +0.0000i, 15.8188 +0.0000i)

#----------------------------------------
frame = 068 -> r = 1.061


solution: (0.8586 +8.1690i, -8.7118 +15.0893i)

solution: (0.8586 -8.1690i, -8.7118 -15.0893i)

solution: (8.2140 +0.0000i, 17.4236 +0.0000i)

#----------------------------------------
frame = 069 -> r = 1.091


solution: (0.9169 +8.7240i, -9.5695 +16.5749i)

solution: (0.9169 -8.7240i, -9.5695 -16.5749i)

solution: (8.7721 +0.0000i, 19.1390 +0.0000i)

#----------------------------------------
frame = 070 -> r = 1.121


solution: (0.9775 +9.3000i, -10.4847 +18.1600i)

solution: (0.9775 -9.3000i, -10.4847 -18.1600i)

solution: (9.3512 +0.0000i, 20.9693 +0.0000i)

#----------------------------------------
frame = 071 -> r = 1.152


solution: (1.0402 +9.8970i, -11.4594 +19.8482i)

solution: (1.0402 -9.8970i, -11.4594 -19.8482i)

solution: (9.9516 +0.0000i, 22.9187 +0.0000i)

#----------------------------------------
frame = 072 -> r = 1.182


solution: (1.1052 +10.5154i, -12.4958 +21.6433i)

solution: (1.1052 -10.5154i, -12.4958 -21.6433i)

solution: (10.5734 +0.0000i, 24.9916 +0.0000i)

#----------------------------------------
frame = 073 -> r = 1.212


solution: (1.1725 +11.1554i, -13.5961 +23.5492i)

solution: (1.1725 -11.1554i, -13.5961 -23.5492i)

solution: (11.2168 +0.0000i, 27.1922 +0.0000i)

#----------------------------------------
frame = 074 -> r = 1.242


solution: (1.2420 +11.8170i, -14.7625 +25.5695i)

solution: (1.2420 -11.8170i, -14.7625 -25.5695i)

solution: (11.8821 +0.0000i, 29.5251 +0.0000i)

#----------------------------------------
frame = 075 -> r = 1.273


solution: (1.3138 +12.5004i, -15.9973 +27.7081i)

solution: (1.3138 -12.5004i, -15.9973 -27.7081i)

solution: (12.5693 +0.0000i, 31.9946 +0.0000i)

#----------------------------------------
frame = 076 -> r = 1.303


solution: (1.3880 +13.2060i, -17.3025 +29.9689i)

solution: (1.3880 -13.2060i, -17.3025 -29.9689i)

solution: (13.2787 +0.0000i, 34.6051 +0.0000i)

#----------------------------------------
frame = 077 -> r = 1.333


solution: (1.4645 +13.9337i, -18.6806 +32.3557i)

solution: (1.4645 -13.9337i, -18.6806 -32.3557i)

solution: (14.0104 +0.0000i, 37.3612 +0.0000i)

#----------------------------------------
frame = 078 -> r = 1.364


solution: (1.5433 +14.6838i, -20.1337 +34.8726i)

solution: (1.5433 -14.6838i, -20.1337 -34.8726i)

solution: (14.7647 +0.0000i, 40.2674 +0.0000i)

#----------------------------------------
frame = 079 -> r = 1.394


solution: (1.6245 +15.4565i, -21.6641 +37.5234i)

solution: (1.6245 -15.4565i, -21.6641 -37.5234i)

solution: (15.5417 +0.0000i, 43.3283 +0.0000i)

#----------------------------------------
frame = 080 -> r = 1.424


solution: (1.7081 +16.2519i, -23.2742 +40.3121i)

solution: (1.7081 -16.2519i, -23.2742 -40.3121i)

solution: (16.3415 +0.0000i, 46.5484 +0.0000i)

#----------------------------------------
frame = 081 -> r = 1.455


solution: (1.7942 +17.0702i, -24.9662 +43.2427i)

solution: (1.7942 -17.0702i, -24.9662 -43.2427i)

solution: (17.1643 +0.0000i, 49.9324 +0.0000i)

#----------------------------------------
frame = 082 -> r = 1.485


solution: (1.8826 +17.9116i, -26.7425 +46.3194i)

solution: (1.8826 -17.9116i, -26.7425 -46.3194i)

solution: (18.0103 +0.0000i, 53.4850 +0.0000i)

#----------------------------------------
frame = 083 -> r = 1.515


solution: (1.9735 +18.7762i, -28.6054 +49.5461i)

solution: (1.9735 -18.7762i, -28.6054 -49.5461i)

solution: (18.8796 +0.0000i, 57.2109 +0.0000i)

#----------------------------------------
frame = 084 -> r = 1.545


solution: (2.0668 +19.6641i, -30.5574 +52.9269i)

solution: (2.0668 -19.6641i, -30.5574 -52.9269i)

solution: (19.7724 +0.0000i, 61.1147 +0.0000i)

#----------------------------------------
frame = 085 -> r = 1.576


solution: (2.1626 +20.5755i, -32.6007 +56.4660i)

solution: (2.1626 -20.5755i, -32.6007 -56.4660i)

solution: (20.6889 +0.0000i, 65.2013 +0.0000i)

#----------------------------------------
frame = 086 -> r = 1.606


solution: (2.2609 +21.5107i, -34.7377 +60.1675i)

solution: (2.2609 -21.5107i, -34.7377 -60.1675i)

solution: (21.6292 +0.0000i, 69.4755 +0.0000i)

#----------------------------------------
frame = 087 -> r = 1.636


solution: (2.3617 +22.4696i, -36.9710 +64.0356i)

solution: (2.3617 -22.4696i, -36.9710 -64.0356i)

solution: (22.5934 +0.0000i, 73.9420 +0.0000i)

#----------------------------------------
frame = 088 -> r = 1.667


solution: (2.4650 +23.4525i, -39.3029 +68.0745i)

solution: (2.4650 -23.4525i, -39.3029 -68.0745i)

solution: (23.5817 +0.0000i, 78.6057 +0.0000i)

#----------------------------------------
frame = 089 -> r = 1.697


solution: (2.5708 +24.4596i, -41.7358 +72.2885i)

solution: (2.5708 -24.4596i, -41.7358 -72.2885i)

solution: (24.5943 +0.0000i, 83.4716 +0.0000i)

#----------------------------------------
frame = 090 -> r = 1.727


solution: (2.6792 +25.4909i, -44.2722 +76.6817i)

solution: (2.6792 -25.4909i, -44.2722 -76.6817i)

solution: (25.6313 +0.0000i, 88.5444 +0.0000i)

#----------------------------------------
frame = 091 -> r = 1.758


solution: (2.7902 +26.5466i, -46.9146 +81.2586i)

solution: (2.7902 -26.5466i, -46.9146 -81.2586i)

solution: (26.6928 +0.0000i, 93.8293 +0.0000i)

#----------------------------------------
frame = 092 -> r = 1.788


solution: (2.9037 +27.6269i, -49.6655 +86.0232i)

solution: (2.9037 -27.6269i, -49.6655 -86.0232i)

solution: (27.7790 +0.0000i, 99.3311 +0.0000i)

#----------------------------------------
frame = 093 -> r = 1.818


solution: (3.0198 +28.7318i, -52.5274 +90.9801i)

solution: (3.0198 -28.7318i, -52.5274 -90.9801i)

solution: (28.8901 +0.0000i, 105.0548 +0.0000i)

#----------------------------------------
frame = 094 -> r = 1.848


solution: (3.1386 +29.8616i, -55.5028 +96.1336i)

solution: (3.1386 -29.8616i, -55.5028 -96.1336i)

solution: (30.0261 +0.0000i, 111.0055 +0.0000i)

#----------------------------------------
frame = 095 -> r = 1.879


solution: (3.2600 +31.0164i, -58.5941 +101.4880i)

solution: (3.2600 -31.0164i, -58.5941 -101.4880i)

solution: (31.1872 +0.0000i, 117.1883 +0.0000i)

#----------------------------------------
frame = 096 -> r = 1.909


solution: (3.3840 +32.1962i, -61.8041 +107.0478i)

solution: (3.3840 -32.1962i, -61.8041 -107.0478i)

solution: (32.3736 +0.0000i, 123.6081 +0.0000i)

#----------------------------------------
frame = 097 -> r = 1.939


solution: (3.5106 +33.4013i, -65.1351 +112.8173i)

solution: (3.5106 -33.4013i, -65.1351 -112.8173i)

solution: (33.5853 +0.0000i, 130.2702 +0.0000i)

#----------------------------------------
frame = 098 -> r = 1.970


solution: (3.6399 +34.6318i, -68.5898 +118.8011i)

solution: (3.6399 -34.6318i, -68.5898 -118.8011i)

solution: (34.8225 +0.0000i, 137.1796 +0.0000i)

#----------------------------------------
frame = 099 -> r = 2.000


solution: (3.7720 +35.8877i, -72.1708 +125.0035i)

solution: (3.7720 -35.8877i, -72.1708 -125.0035i)

solution: (36.0854 +0.0000i, 144.3416 +0.0000i)
